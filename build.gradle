plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = "${project.mod_version}+${project.minecraft_min_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "BlameJared"
		url = "https://maven.blamejared.com/"
	}
	maven {
		name = "Ladysnake Mods"
		url = "https://maven.ladysnake.org/releases/"
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "WispForest"
		url = "https://maven.wispforest.io/"
	}
	maven {
		name = "Fuzs Mod Resources"
		url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
	}
	maven {
		name = "CurseMaven"
		url = "https://cursemaven.com/"
	}
}

loom {
    splitEnvironmentSourceSets()
	accessWidenerPath = file("src/main/resources/bhc.accesswidener")
	mods {
		"bhc" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}


dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// owo-lib
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
	include "io.wispforest:owo-sentinel:${project.owo_version}"

	// Trinkets
	modImplementation "dev.emi:trinkets:${project.trinkets_version}"

	// Forge Config API
	modImplementation include("fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${fca_version}")
	modLocalRuntime "fuzs.forgeconfigscreens:forgeconfigscreens-fabric:${fca_version}"
}

processResources {
	var replaceProperties = [
            version          : mod_version,
            fabric_version   : fabric_min_version,
            loader_version   : loader_min_version,
            minecraft_version: minecraft_min_version,
            owo_version      : owo_min_version,
            trinkets_version : trinkets_min_version
    ]

	inputs.properties replaceProperties

	filesMatching("fabric.mod.json") {
		expand replaceProperties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}